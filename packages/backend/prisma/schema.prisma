// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id           String        @id @default(cuid())
    email        String        @unique
    username     String        @unique
    passwordHash String
    level        Int           @default(1)
    xp           Int           @default(0)
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
    quizzes      Quiz[] // Created quizzes
    attempts     QuizAttempt[]
    achievements Achievement[]
}

model Category {
    id          String   @id @default(cuid())
    name        String   @unique
    description String?
    color       String
    icon        String
    quizzes     Quiz[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Quiz {
    id          String        @id @default(cuid())
    title       String
    description String?
    category    Category      @relation(fields: [categoryId], references: [id])
    categoryId  String
    creator     User          @relation(fields: [creatorId], references: [id])
    creatorId   String
    difficulty  Difficulty    @default(EASY)
    questions   Question[]
    attempts    QuizAttempt[]
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
}

model Question {
    id        String @id @default(cuid())
    quiz      Quiz   @relation(fields: [quizId], references: [id])
    quizId    String
    text      String
    options   Json // Array of answer options
    correct   Int // Index of correct answer
    timeLimit Int // Seconds
    order     Int
}

model QuizAttempt {
    id        String    @id @default(cuid())
    user      User      @relation(fields: [userId], references: [id])
    userId    String
    quiz      Quiz      @relation(fields: [quizId], references: [id])
    quizId    String
    score     Int
    answers   Json // Array of user's answers
    startedAt DateTime  @default(now())
    endedAt   DateTime?
}

model Achievement {
    id          String          @id @default(cuid())
    name        String          @unique
    description String
    type        AchievementType
    users       User[]
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

enum Difficulty {
    EASY
    MEDIUM
    HARD
}

enum AchievementType {
    QUIZ_COMPLETION
    CATEGORY_MASTERY
    CREATION_MILESTONE
    SCORE_MILESTONE
}
